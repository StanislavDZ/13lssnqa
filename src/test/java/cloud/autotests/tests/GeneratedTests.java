package cloud.autotests.tests;

import cloud.autotests.helpers.DriverUtils;
import io.qameta.allure.Description;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import static com.codeborne.selenide.Condition.text;
import static com.codeborne.selenide.Selenide.*;
import static io.qameta.allure.Allure.step;
import static org.assertj.core.api.Assertions.assertThat;


public class GeneratedTests extends TestBase {
    @Test
    @Description("Checking change Titles EN version")
    @DisplayName("Beresnev")
    void titleENTestBeresnev() {
        step("Открыть 'https://beresnev.games/en'", () -> {
            open("https://beresnev.games/en");
            sleep(200);
        });

        step("Провкручиваем страницу вниз через специальную кнопку", () -> {
            $("[class=BtnScroll_box__3XQTk]", 0).click();
        });

        step("Проверяем корректность написания заголовка Our games", () -> {
            $("[class='text--h2 text--center']", 0).shouldHave(text("Our games"));
        });


        step("Проверяем корректность написания заголовка We’re hiring", () -> {
            $("[class='text--h2 text--center']", 1).scrollTo().shouldHave(text("We’re hiring"));
        });
    }


    @Test
    @Description("Checking change Titles Cz version")
    @DisplayName("Beresnev")
    void titleCZTestBeresnev() {
        step("Открыть 'https://beresnev.games/cz'", () -> {
            open("https://beresnev.games/cz");
            sleep(200);
        });

        step("Провкручиваем страницу вниз через специальную кнопку", () -> {
            $("[class=BtnScroll_box__3XQTk]", 0).click();
        });

        step("Проверяем корректность написания заголовка Naše hry", () -> {
            $("[class='text--h2 text--center']", 0).shouldHave(text("Naše hry"));
        });


        step("Проверяем корректность написания заголовка Volná pracovní místa", () -> {
            $("[class='text--h2 text--center']", 1).scrollTo().shouldHave(text("Volná pracovní místa"));
        });
    }

    @Test
    @Description("Checking change Titles Ru version")
    @DisplayName("Beresnev")
    void titleRUTestBeresnev() {
        step("Открыть 'https://beresnev.games/ru'", () -> {
            open("https://beresnev.games/ru");
            sleep(200);
        });

        step("Провкручиваем страницу вниз через специальную кнопку", () -> {
            $("[class=BtnScroll_box__3XQTk]", 0).click();
        });

        step("Проверяем корректность написания заголовка Наши игры", () -> {
            $("[class='text--h2 text--center']", 0).shouldHave(text("Наши игры"));
        });


        step("Проверяем корректность написания заголовка Открытые вакансии", () -> {
            $("[class='text--h2 text--center']", 1).scrollTo().shouldHave(text("Открытые вакансии"));
        });
    }

   /* @Test
    @Description("Autogenerated test")
    @DisplayName("Page title should have header text")
    void titleTest() {
        step("Open url 'https://github.com/login'", () ->
            open("https://github.com/login"));

        step("Page title should have text 'Sign in to GitHub · GitHub'", () -> {
            String expectedTitle = "Sign in to GitHub · GitHub";
            String actualTitle = title();

            assertThat(actualTitle).isEqualTo(expectedTitle);
        });
    }

    @Test
    @Description("Autogenerated test")
    @DisplayName("Page console log should not have errors")
    void consoleShouldNotHaveErrorsTest() {
        step("Open url 'https://github.com/login'", () ->
            open("https://github.com/login"));

        step("Console logs should not contain text 'SEVERE'", () -> {
            String consoleLogs = DriverUtils.getConsoleLogs();
            String errorText = "SEVERE";

            assertThat(consoleLogs).doesNotContain(errorText);
        });
    }*/
}